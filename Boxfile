from "ubuntu:xenial"

def install_packages pkgs
  cmds = [
    %(apt-get update -q),
    %(apt-get upgrade -qy),
    %(apt-get install -qy #{pkgs}),
  ]

  cmds.each { |cmd| run cmd }
end

def install_dependencies
  versions = {
    kubernetes: "v1.7.5",
    weave: "v2.0.4",
    tini: "v0.14.0",
  }

  prepare = [
    'curl --silent "https://packages.cloud.google.com/apt/doc/apt-key.gpg" | apt-key add -',
    'echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list',
  ]

  dependencies = %(curl apt-transport-https)

  # TODO pin versions here
  # TODO docker-engine
  # TODO installing kubeadm fails due to systemd
  official_packages = %(docker.io kubectl kubelet kubernetes-cni)

  kube_release_artefacts = "https://dl.k8s.io/#{versions[:kubernetes]}/bin/linux/amd64"
  weave_release_artefacts = "https://github.com/weaveworks/weave/releases/download"
  weave_launcher = "https://cloud.weave.works/k8s/v1.6/net.yaml?v=#{versions[:weave]}"

  download_files = [
    "/usr/bin/weave" => {
      url: "#{weave_release_artefacts}/#{versions[:weave]}/weave",
      mode: '0755',
    },
    "/etc/weave.yaml" => {
      url: weave_launcher,
      mode: '0644',
    },
    "/usr/bin/kubeadm" => {
      url: "#{kube_release_artefacts}/kubeadm",
      mode: '0755',
    },
    "/usr/bin/tini" => {
      url: "https://github.com/krallin/tini/releases/download/#{versions[:tini]}/tini",
      mode: '0755',
    },
  ]

  install_packages dependencies

  prepare.each { |cmd| run cmd }

  install_packages official_packages

  download_files.each do |file|
    file.each do |dest,info|
      run %(curl --output "#{dest}" --fail --silent --location "#{info[:url]}")
      run %(chmod "#{info[:mode]}" "#{dest}")
    end
  end

end

def kubelet_cmd
  %w(
    kubelet
      --kubeconfig=/etc/kubernetes/kubelet.conf --require-kubeconfig=true
      --pod-manifest-path=/etc/kubernetes/manifests --allow-privileged=true
      --network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin
      --cluster-dns=10.96.0.10 --cluster-domain=cluster.local
      --cgroups-per-qos=false --enforce-node-allocatable=""
      --node-ip="192.168.65.2"
  )
end

def create_kubelet_wrapper
  kubelet_wrapper = "#!/bin/sh\nuntil #{kubelet_cmd.join(' ')} ; do sleep 1 ; done"
  run "echo \"#{kubelet_wrapper}\" > /usr/bin/kubelet.sh && chmod 0755 /usr/bin/kubelet.sh"
end

install_dependencies

create_kubelet_wrapper

# TODO use environment variable to set (https://github.com/erikh/box/issues/144)
# org.label-schema.vcs-url
# org.label-schema.vcs-ref

env KUBECONFIG: "/etc/kubernetes/admin.conf"

image_name = "errordeveloper/kxd"

set_exec entrypoint: %w(/bin/bash -c), cmd: []

tag "#{image_name}:shell"

set_exec entrypoint: %w(tini -s --), cmd: %w(kubelet.sh)

tag "#{image_name}:kubelet"
